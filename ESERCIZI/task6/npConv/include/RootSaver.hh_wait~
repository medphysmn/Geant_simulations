// $Id: RootSaver.hh 47 2010-01-19 16:20:46Z adotti $
/**
 * @file   RootSaver.hh
 *
 * @date   17 Dec 2009
 * @author gcroci
 *
 * @brief  Save hits in a ROOT TTree
 */

#ifndef ROOTSAVER_HH_
#define ROOTSAVER_HH_

#include <string>
#include <TTree.h>
#include "GasHit.hh"
class TFile;

/*!
 * \brief Save hits and digits to a ROOT TTree.
 *
 * This class can be used to save in a TTree hits
 * and digits.
 * The TTree structure is described below.
 */
class RootSaver
{
public:
  //! Default constructor,
  RootSaver();
  //! Default destructor.
  virtual ~RootSaver();
  /*! \brief Open a TFile and create ROOT TTree.
	 *
	 * Each time that a /run/beamOn command is issued
	 * this method should be called
	 * Every time this method is called the run counter
	 * is incremented and the file name is modified accordingly:
	 * tree_run<n>.root
	 * \sa CloseTree()
	 * @param fileName : The ROOT file name prefix
	 * @param treeName : The name of the TTree
	 */
  virtual void CreateTree( const std::string& fileName = "tree" , 
				 const std::string& treeName = "Gas_Tree" );
	/*! Close the file and save ROOT TTree
	 * The ROOT file should be closed at the end of each /run/beamOn
	 * \sa CloseTree
	 */
  virtual void CloseTree();
  //! Add hits and digi container for this event
  virtual void AddEvent( const GasHitCollection* const hits);
private:
  TTree* rootTree; //!< Pointer to the ROOT TTree
  unsigned int runCounter; //!< Run counter to uniquely identify ROOT file

  //! \name TTree variables
  //@{
  //! Number of strips of each module
  
  
  //Number of secondaries in one Event
  Int_t Tot_Num_Sec;
  //Total energy deposited
  Int_t TotalEdep;
  //Each number is associated to a type of particle
  //From the particle it is possible to understand which particle was created
  Int_t* SecType;
  //! Signal in each strip for first module
  Float_t* Sec_EnDep;
  
};

#endif /* ROOTSAVER_HH_ */
